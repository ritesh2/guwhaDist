{"version":3,"sources":["api/slot/slot.controller.js"],"names":[],"mappings":"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","file":"api/slot/slot.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/slots              ->  index\r\n * POST    /api/slots              ->  create\r\n * GET     /api/slots/:id          ->  show\r\n * PUT     /api/slots/:id          ->  update\r\n * DELETE  /api/slots/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport Slot from './slot.model';\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction respondSlotsWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n       // var finalResult = _.map({slot10 : true, slot11 : false, slot12 : false, slot1 : false, slot2 : false, slot3 : false, slot4 : false, slot5 : false, slot6 : false, slot7 : false });\r\n        var resultJson = {slot10 : false, slot11 : false, slot12 : false, slot1 : false, slot2 : false, slot3 : false, slot4 : false, slot5 : false, slot6 : false, slot7 : false };\r\n        for(var i = 0; i < entity.length; i++) {\r\n            if(!resultJson.slot10 && entity[i].slot10) {\r\n                resultJson.slot10 = true;\r\n            }\r\n            if(!resultJson.slot11 && entity[i].slot11) {\r\n                resultJson.slot11 = true;\r\n            }\r\n            if(!resultJson.slot12 && entity[i].slot12) {\r\n                resultJson.slot12 = true;\r\n            }\r\n            if(!resultJson.slot1 && entity[i].slot1) {\r\n                resultJson.slot1 = true;\r\n            }\r\n            if(!resultJson.slot2 && entity[i].slot2) {\r\n                resultJson.slot2 = true;\r\n            }\r\n            if(!resultJson.slot3 && entity[i].slot3) {\r\n                resultJson.slot3 = true;\r\n            }\r\n            if(!resultJson.slot4 && entity[i].slot4) {\r\n                resultJson.slot4 = true;\r\n            }\r\n            if(!resultJson.slot5 && entity[i].slot5) {\r\n                resultJson.slot5 = true;\r\n            }\r\n            if(!resultJson.slot6 && entity[i].slot6) {\r\n                resultJson.slot6 = true;\r\n            }\r\n            if(!resultJson.slot7 && entity[i].slot7) {\r\n                resultJson.slot7 = true;\r\n            }\r\n            if(!resultJson.date && entity[i].date) {\r\n                resultJson.date = entity[i].date;\r\n            }\r\n        }\r\n      res.status(statusCode).json(resultJson);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Slots\r\nexport function index(req, res) {\r\n  return Slot.find().exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Slot from the DB\r\nexport function show(req, res) {\r\n  return Slot.find({sid : req.params.sid, date : req.params.date}).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondSlotsWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n    \r\nexport function findSlot(req, res) {\r\n    var query = {};\r\n    query[\"sid\"] = req.params.sid;\r\n    query[\"date\"] = req.params.date;\r\n    query[req.params.slot] = true;\r\n  return Slot.find(query).select('pid -_id').exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Slot in the DB\r\nexport function create(req, res) {\r\n  return Slot.create(req.body)\r\n    .then(respondWithResult(res, 201))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Updates an existing Slot in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Slot.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Slot from the DB\r\nexport function destroy(req, res) {\r\n  return Slot.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n"],"sourceRoot":"/source/"}