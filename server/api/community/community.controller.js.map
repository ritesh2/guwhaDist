{"version":3,"sources":["api/community/community.controller.js"],"names":[],"mappings":"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","file":"api/community/community.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/community              ->  index\r\n * POST    /api/community              ->  create\r\n * GET     /api/community/:id          ->  show\r\n * PUT     /api/community/:id          ->  update\r\n * DELETE  /api/community/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport _ from 'lodash';\r\nimport validator from 'validator';\r\nimport pwdgen from 'password-generator';\r\nimport Community from './community.model';\r\nimport User from '../user/user.model';\r\nimport  help from 'sendgrid';\r\nvar helper = help.mail;\r\nvar generatePassword = require('password-generator');\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n    }\r\n  };\r\n}\r\n\r\nfunction saveUpdates(updates) {\r\n  return function(entity) {\r\n    var updated = _.merge(entity, updates);\r\n    return updated.save()\r\n      .then(updated => {\r\n        return updated;\r\n      });\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if (entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if (!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Communitys\r\nexport function index(req, res) {\r\n  return Community.find().exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Community from the DB\r\nexport function show(req, res) {\r\n  return Community.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Community in the DB\r\nexport function create(req, res) {\r\n   if(!validator.isEmail(req.body.emailId)){\r\n       res.status(400).send(\"Email is bad\");\r\n       return;\r\n   }    \r\n   if(!validator.isNumeric(req.body.phoneNumber)){\r\n       res.status(400).send(\"Phone number is bad\");\r\n       return;\r\n   }    \r\n  var docs = [];\r\n  return Community.create(req.body)\r\n    .then(function(community){\r\n      var result = [];\r\n      var password = generatePassword(8, false);\r\n      docs.push(community);\r\n      return User.create({email: req.body.emailId, \r\n                          firstName: req.body.communityName, \r\n                          communityId: community.communityId, \r\n                          password: password})\r\n        .then(respondCommunityWithResult(res, password, 201))\r\n        .catch(handleTransactionError(res, docs));\r\n    })\r\n    .catch(handleTransactionError(res, docs));\r\n} \r\n\r\nfunction handleTransactionError(res, docs, statusCode) {\r\n    statusCode = statusCode || 500; \r\n    return function (err) {\r\n        for (var i = 0; i < docs.length; i++) {\r\n            docs[i].remove(onRemove);\r\n        }\r\n        res.status(statusCode).send(err);\r\n    };\r\n}\r\n\r\nfunction onRemove(err, doc) {\r\n  console.log('removed:', doc);\r\n}\r\n\r\nfunction createUserWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n      mail(entity.emailId);\r\n    }\r\n  };\r\n}\r\n\r\nfunction respondCommunityWithResult(res, password, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if (entity) {\r\n      res.status(statusCode).json(entity);\r\n      mail(entity.email, password);\r\n    }\r\n  };\r\n}\r\n\r\n// Updates an existing Community in the DB\r\nexport function update(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Community.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(saveUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Community from the DB\r\nexport function destroy(req, res) {\r\n  return Community.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\nexport function addBlock(req,res){    \r\n    return Community.findOneAndUpdate(\r\n    {communityId : req.body.communityId},\r\n    {$push : { blocks :  req.body.blocks}},\r\n    {safe : true, upsert:true, new:true})\r\n        .then(respondWithResult(res, 201))\r\n        .catch(handleError(res));\r\n}\r\n\r\nexport function deleteBlock(req,res){\r\n  Community.update(\r\n    {\"communityId\":req.body.id },\r\n    {$pull :  { \"blocks\": { \"blockName\" : { $in  :  req.body.blockNames }  } } },\r\n    {safe:true}\r\n  )\r\n  .then(handleEntityNotFound(res))\r\n  .then(respondWithResult(res))\r\n  .catch(handleError(res));\r\n}\r\n\r\nexport function getBlocks(req,res){\r\n    console.log(\"Community Id is \" + req.params.id);\r\n    return Community.find({communityId:req.params.id},{blocks:1}).exec()\r\n        .then(handleEntityNotFound(res))\r\n        .then(respondWithResult(res))\r\n        .catch(handleError(res));\r\n}\r\n    \r\nexport function addFloors(req,res){\r\nCommunity.update( \r\n       { \"communityId\":req.body.id,\"blocks.blockName\":req.body.blockName},\r\n       {$addToSet : {\"blocks.$.floors\" : { $each : req.body.floors }   \r\n}}).then(respondWithResult(res,200))\r\n    .catch(handleError(res));\r\n}\r\n\r\nexport function deleteFloors(req,res){\r\nCommunity.update(\r\n    {\"communityId\": req.body.id,\"blocks.blockName\":req.body.blockName},\r\n    {$pull:{ \"blocks.$.floors\": { \"floorNumber\" :{ $in : req.body.floors }}}}, \r\n    {safe:true})\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n    \r\nexport function mail(emailId, password){\r\n\r\n  var helper = require('sendgrid').mail;\r\n  var from_email = new helper.Email(\"noreply@guwha.com\");\r\n  var to_email = new helper.Email(emailId);\r\n  var subject = \"Welcome to Guwha Community\";\r\n  var bodyContent = \"Hi, \\n Welcome to Guwha \\n Your username : \" + emailId + \" \\n Password : \" + password + \"\\nRegards,\\nGuwha\";\r\n  var content = new helper.Content(\"text/plain\", bodyContent);\r\n  var mail = new helper.Mail(from_email, subject, to_email, content);\r\n\r\n  var sg = require('sendgrid').SendGrid('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');\r\n  var requestBody = mail.toJSON()\r\n  var request = sg.emptyRequest()\r\n  request.method = 'POST'\r\n  request.path = '/v3/mail/send'\r\n  request.body = requestBody\r\n  sg.API(request, function (response) {\r\n//    console.log(response.statusCode)\r\n//    console.log(response.body)\r\n//    console.log(response.headers)\r\n  })\r\n    \r\n}\r\n"],"sourceRoot":"/source/"}