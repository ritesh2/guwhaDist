{"version":3,"sources":["api/community/community.model.js"],"names":[],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAI,kBAAkB,IAAI,mBAAS,MAAb,CAAoB;AACtC,YAAQ,OAD8B;AAEtC,mBAAe,MAFuB;AAGtC,aAAS,EAAE,MAAO,MAAT,EAAkB,QAAS,IAA3B,EAAiC,UAAW,IAA5C,EAH6B;AAItC,mBAAe,EAAE,MAAO,OAAT,EAAkB,SAAU,KAA5B,EAJuB;AAKtC,iBAAa;AACT,qBAAc,MADL;AAET,gBAAS;AAFA,KALyB;AAStC,iBAAa,CAAC;AACV,cAAM,MADI;AAEV,iBAAS,IAFC;AAGV,gBAAQ;AAHE,KAAD,CATyB;AActC,aAAS;AACL,kBAAU,MADL;AAEL,kBAAU,MAFL;AAGL,kBAAU,MAHL;AAIL,kBAAU,MAJL;AAKL,cAAM,MALD;AAML,iBAAS;AANJ,KAd6B;AAsBtC,YAAQ,CAAC;AACL,mBAAW,MADN;AAEL,gBAAQ,CAAC;AACL,yBAAa,MADR;AAEL,yBAAa,CAAC,MAAD;AAFR,SAAD;AAFH,KAAD,CAtB8B;;AA8BtC,eAAW,CAAC;AACR,qBAAa,MADL;AAER,qBAAa,MAFL;AAGR,uBAAe,MAHP;AAIR,uBAAe;AACX,kBAAM,MADK;AAEX,0BAAc;AAFH,SAJP;AAQR,qBAAa;AARL,KAAD,CA9B2B;;AAyCtC,WAAO,CAAC;AACJ,mBAAW,MADP;AAEJ,kBAAU,MAFN;AAGJ,qBAAa;AACT,kBAAM,MADG;AAET,kBAAM,CAAC,WAAD,EAAc,UAAd;AAFG,SAHT;AAOJ,sBAAc;AACV,uBAAW,IADD;AAEV,qBAAS;AAFC,SAPV;AAWJ,uBAAe,MAXX;AAYJ,iBAAS;AACL,sBAAU,MADL;AAEL,sBAAU,MAFL;AAGL,sBAAU,MAHL;AAIL,sBAAU,MAJL;AAKL,kBAAM,MALD;AAML,qBAAS;AANJ;AAZL,KAAD,CAzC+B;AA8DtC,iBAAa;AACT,uBAAe,MADN;AAET,yBAAiB,MAFR;AAGT,kBAAU,MAHD;AAIT,oBAAY,MAJH;AAKT,cAAM;AALG;;AA9DyB,CAApB,CAAtB;AAwEA,gBAAgB,MAAhB,CAAuB,gCAAc,MAArC,EAA6C;AACzC,WAAO,WADkC;AAEzC,WAAO,aAFkC;AAGzC,aAAS,IAHgC;AAIzC,iBAAa;AAJ4B,CAA7C;;AAOA,gBAAgB,MAAhB,oCAAwC,EAAE,SAAS,wDAAX,EAAxC;kBACe,mBAAS,KAAT,CAAe,WAAf,EAA4B,eAA5B,C","file":"api/community/community.model.js","sourcesContent":["'use strict';\r\n\r\nimport mongoose from 'mongoose';\r\nimport autoIncrement from 'mongoose-auto-increment';\r\nimport uniqueValidator from 'mongoose-unique-validator';\r\n\r\nvar CommunitySchema = new mongoose.Schema({\r\n    active: Boolean,\r\n    communityName: String,\r\n    emailId: { type : String , unique : true, required : true },\r\n    emailVerified: { type : Boolean, default : false},\r\n    phoneNumber :{\r\n        countryCode : String,\r\n        number : String\r\n    },\r\n    communityId: [{\r\n        type: Number,\r\n        default: 1001,\r\n        unique: true\r\n    }],\r\n    address: {\r\n        address1: String,\r\n        address2: String,\r\n        locality: String,\r\n        landmark: String,\r\n        city: String,\r\n        pincode: String\r\n    },\r\n    blocks: [{\r\n        blockName: String,\r\n        floors: [{\r\n            floorNumber: Number,\r\n            flatNumbers: [String]\r\n    }]\r\n}],\r\n\r\n    amenities: [{\r\n        amenityName: String,\r\n        description: String,\r\n        chargePerHour: Number,\r\n        contactPerson: {\r\n            name: String,\r\n            contactPhone: String\r\n        },\r\n        canBeShared: Boolean\r\n}],\r\n\r\n    staff: [{\r\n        staffName: String,\r\n        category: String,\r\n        typeOfStaff: {\r\n            type: String,\r\n            enum: ['PERMANENT', 'CONTRACT']\r\n        },\r\n        workingHours: {\r\n            startTime: Date,\r\n            endTime: Date,\r\n        },\r\n        contactNumber: String,\r\n        address: {\r\n            address1: String,\r\n            address2: String,\r\n            locality: String,\r\n            landmark: String,\r\n            city: String,\r\n            pincode: String\r\n        }\r\n}],\r\n    bankDetails: {\r\n        accountNumber: String,\r\n        beneficiaryName: String,\r\n        bankName: String,\r\n        branchName: String,\r\n        IFSC: String\r\n    }\r\n\r\n\r\n});\r\nCommunitySchema.plugin(autoIncrement.plugin, {\r\n    model: 'Community',\r\n    field: 'communityId',\r\n    startAt: 1001,\r\n    incrementBy: 1\r\n});\r\n\r\nCommunitySchema.plugin(uniqueValidator, { message: 'The specified email address {VALUE} is already in use.' });\r\nexport default mongoose.model('Community', CommunitySchema);\r\n"],"sourceRoot":"/source/"}