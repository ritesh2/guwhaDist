{"version":3,"sources":["api/party/party.events.js"],"names":[],"mappings":";;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAI,cAAc,0BAAlB;;;AAGA,YAAY,eAAZ,CAA4B,CAA5B;;;AAGA,IAAI,SAAS;AACX,UAAQ,MADG;AAEX,YAAU;AAFC,CAAb;;;AAMA,KAAK,IAAI,CAAT,IAAc,MAAd,EAAsB;AACpB,MAAI,QAAQ,OAAO,CAAP,CAAZ;AACA,kBAAM,MAAN,CAAa,IAAb,CAAkB,CAAlB,EAAqB,UAAU,KAAV,CAArB;AACD;;AAED,SAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxB,SAAO,UAAS,GAAT,EAAc;AACnB,gBAAY,IAAZ,CAAiB,QAAQ,GAAR,GAAc,IAAI,GAAnC,EAAwC,GAAxC;AACA,gBAAY,IAAZ,CAAiB,KAAjB,EAAwB,GAAxB;AACD,GAHD;AAID;;kBAEc,W","file":"api/party/party.events.js","sourcesContent":["/**\r\n * Party model events\r\n */\r\n\r\n'use strict';\r\n\r\nimport {EventEmitter} from 'events';\r\nimport Party from './party.model';\r\nvar PartyEvents = new EventEmitter();\r\n\r\n// Set max event listeners (0 == unlimited)\r\nPartyEvents.setMaxListeners(0);\r\n\r\n// Model events\r\nvar events = {\r\n  'save': 'save',\r\n  'remove': 'remove'\r\n};\r\n\r\n// Register the event emitter to the model events\r\nfor (var e in events) {\r\n  var event = events[e];\r\n  Party.schema.post(e, emitEvent(event));\r\n}\r\n\r\nfunction emitEvent(event) {\r\n  return function(doc) {\r\n    PartyEvents.emit(event + ':' + doc._id, doc);\r\n    PartyEvents.emit(event, doc);\r\n  }\r\n}\r\n\r\nexport default PartyEvents;\r\n"],"sourceRoot":"/source/"}