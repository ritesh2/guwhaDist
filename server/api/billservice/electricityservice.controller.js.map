{"version":3,"sources":["api/billservice/electricityservice.controller.js"],"names":[],"mappings":";;;;;QA0BgB,Q,GAAA,Q;QAeA,Y,GAAA,Y;QAwBA,kB,GAAA,kB;;AA/DhB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;;;;;AAGA,IAAI,WAAU,OAAO,OAAP,GAAiB,EAA/B;;;;AAEA,SAAQ,eAAR,GAA2B,YAAW,CASrC;;;;;;;;;;;;AATD,CAYO,SAAS,QAAT,CAAkB,GAAlB,EAAuB,QAAvB,EAAiC;AACtC,oBAAM,GAAN,CAAU,GAAV,EAAe,UAAS,GAAT,EAAc;AAC3B,YAAI,OAAO,EAAX;AACA,YAAI,EAAJ,CAAO,MAAP,EAAe,UAAU,KAAV,EAAiB;AAC9B,oBAAQ,KAAR;AACD,SAFD;AAGA,YAAI,EAAJ,CAAO,KAAP,EAAc,YAAW;AACvB,qBAAS,IAAT;AACD,SAFD;AAGD,KARD,EAQG,EARH,CAQM,OARN,EAQe,YAAW;AACxB,iBAAS,IAAT;AACD,KAVD;AAWD;;AAGM,SAAS,YAAT,GAAwB;;;;;;;;;;;;;;;;;;;;;;AAsB9B;;AAEM,SAAS,kBAAT,GAA8B;AACjC,QAAI,QAAQ,wBAAS,OAAT,CAAiB,OAAjB,EAA0B,MAA1B,EAAZ;AACA,QAAI,MAAM,wBAAS,KAAT,CAAe,KAAf,EAAsB,MAAtB,EAAV;AACA,2BAAa,IAAb,GAAoB,IAApB,CAAyB,UAAS,GAAT,EAAc,WAAd,EAA2B;AAChD,YAAG,YAAY,MAAf,EAAuB;AACnB,uCAAgB,IAAhB,CAAqB,EAAE,QAAS,YAAY,CAAZ,EAAe,MAA1B,EAAkC,UAAU,EAAC,MAAM,KAAP,EAAc,KAAK,GAAnB,EAA5C,EAArB,EAA6F,IAA7F,CAAkG,UAAS,GAAT,EAAc,eAAd,EAA+B;AACzH,oBAAG,GAAH,EAAQ;AACJ,4BAAQ,GAAR,CAAY,GAAZ;AACH;AACD,oBAAI,CAAC,gBAAgB,MAArB,EAA6B;AACzB,wBAAI,WAAW,+BAAoB;AAC/B,gCAAQ,YAAY,CAAZ,EAAe,MADQ;AAE/B,mCAAY,YAAY,CAAZ,EAAe,WAFI;AAG/B,oCAAY,QAHmB;AAI/B,kCAAU,wBAAS,MAAT;AAJqB,qBAApB,CAAf;AAMA,6BAAS,IAAT;AACH,iBARD,MAQO;AACH,4BAAQ,GAAR,CAAY,6CAAZ;;AAEH;AACR,aAhBD;AAiBH;AACJ,KApBD;AAqBH","file":"api/billservice/electricityservice.controller.js","sourcesContent":["\r\n\r\nimport UserServices from '../../models/UserServices.model';\r\nimport UserTransaction from '../../models/UserTransactions.model';\r\nimport ElectricityProviders from '../../models/ElectricityProviders.model';\r\n\r\nimport http from 'http';\r\nimport https from 'https';\r\n// import yql from 'yql';\r\nimport moment from 'moment';\r\n// import request from 'request';\r\n\r\nvar exports = module.exports = {};\r\n\r\nexports.billDeskUtility =  function() {\r\n//    new yql.exec(\"select * from html where url='https://www.billdesk.com/pgidsk/pgmerc/apcpdcl_confirm.jsp?uscno=101372969' and xpath='/html/body/form/table/tbody/tr[2]/td/table/tbody/tr[8]/td/table/tbody/tr[6]/td[2]'\", function(response) {\r\n//        for(var inp in response.query.results.td.input) {\r\n//            console.log(response.query.results.td.input[inp]);\r\n//        }\r\n//        //console.log(response.query.results.td.input);\r\n//        //console.log(response.query.results.td.input[1]);\r\n//        //console.log(response.query.results.input.value);\r\n//    });\r\n}\r\n// Utility function that downloads a URL and invokes\r\n// callback with the data.\r\nexport function download(url, callback) {\r\n  https.get(url, function(res) {\r\n    var data = \"\";\r\n    res.on('data', function (chunk) {\r\n      data += chunk;\r\n    });\r\n    res.on(\"end\", function() {\r\n      callback(data);\r\n    });\r\n  }).on(\"error\", function() {\r\n    callback(null);\r\n  });\r\n}\r\n\r\n\r\nexport function paytmRequest() {\r\n    // var request = require(\"request\");\r\n\r\n//    var options = { method: 'POST',\r\n//      url: 'https://paytm.com/papi/v1/expresscart/verify',\r\n//      headers: \r\n//       { \r\n//         'content-type': 'application/json' },\r\n//      body: \r\n//       { cart_items: \r\n//          [ { product_id: 33683541,\r\n//              qty: 1,\r\n//              configuration: { recharge_number: '6064018000', price: 10 },\r\n//              meta_data: {} } ] },\r\n//      json: true };\r\n//\r\n//    request(options, function (error, response, body) {\r\n//      if (error) throw new Error(error);\r\n//\r\n//      console.log(body);\r\n//    });\r\n\r\n}\r\n\r\nexport function recordCurrentBills() {\r\n    var start = moment().startOf('month').toDate();\r\n    var end = moment().endOf('day').toDate();\r\n    UserServices.find().exec(function(err, userService) {\r\n        if(userService.length) {\r\n            UserTransaction.find({ userId : userService[0].userId, billDate: {$gte: start, $lt: end}  }).exec(function(err, userTransaction) {\r\n                    if(err) {\r\n                        console.log(err);\r\n                    }\r\n                    if (!userTransaction.length) {\r\n                        var instance = new UserTransaction({\r\n                            userId: userService[0].userId,\r\n                            serviceId : userService[0].eProviderId,\r\n                            billAmount: '123.00',\r\n                            billDate: moment().toDate()\r\n                        });\r\n                        instance.save();\r\n                    } else {\r\n                        console.log('User Bill already registered in transaction');\r\n                        //console.log(userTransaction);\r\n                    }\r\n            });\r\n        }\r\n    });\r\n}"],"sourceRoot":"/source/"}