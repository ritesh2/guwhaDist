{"version":3,"sources":["config/express.js"],"names":[],"mappings":";;;;AAIA;;;;;;kBAmBe,UAAS,GAAT,EAAc;AAC3B,MAAI,MAAM,IAAI,GAAJ,CAAQ,KAAR,CAAV;;AAEA,MAAI,GAAJ,CAAQ,OAAR,EAAiB,sBAAO,IAAP,GAAc,eAA/B;AACA,MAAI,MAAJ,CAAW,MAAX,EAAmB,QAAQ,KAAR,EAAe,UAAlC;AACA,MAAI,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;AACA,MAAI,GAAJ,CAAQ,4BAAR;AACA,MAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,MAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;AACA,MAAI,GAAJ,CAAQ,+BAAR;AACA,MAAI,GAAJ,CAAQ,6BAAR;AACA,MAAI,GAAJ,CAAQ,mBAAS,UAAT,EAAR;;;;;AAKA,MAAI,GAAJ,CAAQ,8BAAQ;AACd,YAAQ,sBAAO,OAAP,CAAe,OADT;AAEd,uBAAmB,IAFL;AAGd,YAAQ,KAHM;AAId,WAAO,IAAI,UAAJ,CAAe;AACpB,0BAAoB,mBAAS,UADT;AAEpB,UAAI;AAFgB,KAAf;AAJO,GAAR,CAAR;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAI,GAAJ,CAAQ,SAAR,EAAmB,eAAK,IAAL,CAAU,sBAAO,IAAjB,EAAuB,QAAvB,CAAnB;;AAEA,MAAI,iBAAiB,GAArB,EAA0B;AACxB,QAAI,GAAJ,CAAQ,4BAAQ,eAAK,IAAL,CAAU,sBAAO,IAAjB,EAAuB,QAAvB,EAAiC,aAAjC,CAAR,CAAR;AACA,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAAR;AACA,QAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACD;;AAED,MAAI,kBAAkB,GAAtB,EAA2B;AACzB,QAAI,GAAJ,CAAQ,QAAQ,oBAAR,GAAR;AACD;;AAED,MAAI,kBAAkB,GAAlB,IAAyB,WAAW,GAAxC,EAA6C;AAC3C,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,eAAK,IAAL,CAAU,sBAAO,IAAjB,EAAuB,MAAvB,CAAf,CAAR;AACA,QAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,IAAI,GAAJ,CAAQ,SAAR,CAAf,CAAR;AACA,QAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA,QAAI,GAAJ,CAAQ,6BAAR,E;AACE,uBAAS,GAAT,CAAa,OAAb,EAAsB,KAAtB;AACH;AACF,C;;AAjFD;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA,IAAI,aAAa,qDAAjB","file":"config/express.js","sourcesContent":["/**\r\n * Express configuration\r\n */\r\n\r\n'use strict';\r\n\r\nimport express from 'express';\r\nimport favicon from 'serve-favicon';\r\nimport morgan from 'morgan';\r\nimport compression from 'compression';\r\nimport bodyParser from 'body-parser';\r\nimport methodOverride from 'method-override';\r\nimport cookieParser from 'cookie-parser';\r\nimport errorHandler from 'errorhandler';\r\nimport path from 'path';\r\nimport lusca from 'lusca';\r\nimport config from './environment';\r\nimport passport from 'passport';\r\nimport session from 'express-session';\r\nimport connectMongo from 'connect-mongo';\r\nimport mongoose from 'mongoose';\r\nvar MongoStore = connectMongo(session);\r\n\r\nexport default function(app) {\r\n  var env = app.get('env');\r\n\r\n  app.set('views', config.root + '/server/views');\r\n  app.engine('html', require('ejs').renderFile);\r\n  app.set('view engine', 'html');\r\n  app.use(compression());\r\n  app.use(bodyParser.urlencoded({ extended: false }));\r\n  app.use(bodyParser.json());\r\n  app.use(methodOverride());\r\n  app.use(cookieParser());\r\n  app.use(passport.initialize());\r\n\r\n  // Persist sessions with MongoStore / sequelizeStore\r\n  // We need to enable sessions for passport-twitter because it's an\r\n  // oauth 1.0 strategy, and Lusca depends on sessions\r\n  app.use(session({\r\n    secret: config.secrets.session,\r\n    saveUninitialized: true,\r\n    resave: false,\r\n    store: new MongoStore({\r\n      mongooseConnection: mongoose.connection,\r\n      db: 'guwha'\r\n    })\r\n  }));\r\n\r\n//  /**\r\n//   * Lusca - express server security\r\n//   * https://github.com/krakenjs/lusca\r\n//   */\r\n//  if ('test' !== env) {\r\n//    app.use(lusca({\r\n//      csrf: {\r\n//        angular: true\r\n//      },\r\n//      xframe: 'SAMEORIGIN',\r\n//      hsts: {\r\n//        maxAge: 31536000, //1 year, in seconds\r\n//        includeSubDomains: true,\r\n//        preload: true\r\n//      },\r\n//      xssProtection: true\r\n//    }));\r\n//  }\r\n\r\n  app.set('appPath', path.join(config.root, 'client'));\r\n\r\n  if ('production' === env) {\r\n    app.use(favicon(path.join(config.root, 'client', 'favicon.ico')));\r\n    app.use(express.static(app.get('appPath')));\r\n    app.use(morgan('dev'));\r\n  }\r\n\r\n  if ('development' === env) {\r\n    app.use(require('connect-livereload')());\r\n  }\r\n\r\n  if ('development' === env || 'test' === env) {\r\n    app.use(express.static(path.join(config.root, '.tmp')));\r\n    app.use(express.static(app.get('appPath')));\r\n    app.use(morgan('dev'));\r\n    app.use(errorHandler()); // Error handler - has to be last\r\n      mongoose.set('debug', false);\r\n  }\r\n}\r\n"],"sourceRoot":"/source/"}